/* eslint-disable */
// Generated by codegen-mount-ts.ts, do not edit directly
import type { NexusGenRootTypes } from '@packages/graphql/src/gen/nxs.gen'
export interface TestSourceTypeLookup {
  App: NexusGenRootTypes['App'],
  Browser: NexusGenRootTypes['Browser'],
  CloudOrganization: NexusGenRootTypes['CloudOrganization'],
  CloudOrganizationConnection: NexusGenRootTypes['CloudOrganizationConnection'],
  CloudOrganizationEdge: NexusGenRootTypes['CloudOrganizationEdge'],
  CloudProject: NexusGenRootTypes['CloudProject'],
  CloudProjectConnection: NexusGenRootTypes['CloudProjectConnection'],
  CloudProjectEdge: NexusGenRootTypes['CloudProjectEdge'],
  CloudRecordKey: NexusGenRootTypes['CloudRecordKey'],
  CloudRun: NexusGenRootTypes['CloudRun'],
  CloudRunCommitInfo: NexusGenRootTypes['CloudRunCommitInfo'],
  CloudRunConnection: NexusGenRootTypes['CloudRunConnection'],
  CloudRunEdge: NexusGenRootTypes['CloudRunEdge'],
  CloudUser: NexusGenRootTypes['CloudUser'],
  Mutation: NexusGenRootTypes['Mutation'],
  NavigationItem: NexusGenRootTypes['NavigationItem'],
  NavigationMenu: NexusGenRootTypes['NavigationMenu'],
  Node: NexusGenRootTypes['Node'],
  PageInfo: NexusGenRootTypes['PageInfo'],
  Project: NexusGenRootTypes['Project'],
  Query: NexusGenRootTypes['Query'],
  ResolvedBooleanOption: NexusGenRootTypes['ResolvedBooleanOption'],
  ResolvedConfig: NexusGenRootTypes['ResolvedConfig'],
  ResolvedJsonOption: NexusGenRootTypes['ResolvedJsonOption'],
  ResolvedNumberOption: NexusGenRootTypes['ResolvedNumberOption'],
  ResolvedOptionBase: NexusGenRootTypes['ResolvedOptionBase'],
  ResolvedStringListOption: NexusGenRootTypes['ResolvedStringListOption'],
  ResolvedStringOption: NexusGenRootTypes['ResolvedStringOption'],
  TestingTypeInfo: NexusGenRootTypes['TestingTypeInfo'],
  Wizard: NexusGenRootTypes['Wizard'],
  WizardBundler: NexusGenRootTypes['WizardBundler'],
  WizardFrontendFramework: NexusGenRootTypes['WizardFrontendFramework'],
  WizardNpmPackage: NexusGenRootTypes['WizardNpmPackage'],
}

import { list, nonNull, queryField, unionType } from 'nexus'

export const testUnionType = unionType({
  name: 'TestUnion',
  definition (t) {
    // !!! Generated by codegen-mount-ts.ts, do not edit directly !!!
    t.members(
      'App',
      'Browser',
      'CloudOrganization',
      'CloudOrganizationConnection',
      'CloudOrganizationEdge',
      'CloudProject',
      'CloudProjectConnection',
      'CloudProjectEdge',
      'CloudRecordKey',
      'CloudRun',
      'CloudRunCommitInfo',
      'CloudRunConnection',
      'CloudRunEdge',
      'CloudUser',
      'Mutation',
      'NavigationItem',
      'NavigationMenu',
      'PageInfo',
      'Project',
      'Query',
      'ResolvedBooleanOption',
      'ResolvedConfig',
      'ResolvedJsonOption',
      'ResolvedNumberOption',
      'ResolvedStringListOption',
      'ResolvedStringOption',
      'TestingTypeInfo',
      'Wizard',
      'WizardBundler',
      'WizardFrontendFramework',
      'WizardNpmPackage'
    )
    // !!! Generated by codegen-mount-ts.ts, do not edit directly !!!
  },
  resolveType (c) {
    // @ts-ignore
    return c.__typename ?? c.constructor.name
  },
})

// !!! Generated by codegen-mount-ts.ts, do not edit directly !!!
export const testFragmentMember = queryField('testFragmentMember', {
  description: 'Provides a fragment target for testing',
  type: nonNull(testUnionType),
  resolve: (source) => {
    return source
  }
})

// !!! Generated by codegen-mount-ts.ts, do not edit directly !!!
export const testFragmentMemberList = queryField('testFragmentMemberList', {
  description: 'Provides a fragment target list for testing',
  type: list(nonNull(testUnionType)),
  resolve: (source) => {
    return source
  }
})
